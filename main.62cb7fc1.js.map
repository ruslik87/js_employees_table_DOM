{"version":3,"sources":["scripts/main.js"],"names":["head","document","querySelector","tbody","headTh","firstElementChild","children","firstClick","lastClickIndex","getSortedList","i","asc","format","sortedElements","sort","a","b","first","innerText","second","formatData","isNaN","localeCompare","append","text","replace","selectRow","tr","classList","remove","add","addEventListener","e","index","target","cellIndex","parentElement","form","createElement","addInputsAndButtonToForm","forEach","el","label","elementType","type","input","toLowerCase","select","innerHTML","button","body","lastElementChild","before","labels","querySelectorAll","formatSalaryData","data","value","toLocaleString","validationForForm","hasOwnProperty","name","length","test","showNotification","position","includes","office","age","salary","title","description","element","dataset","qa","setTimeout","inputForTable","preventDefault","FormData","formData","Object","fromEntries","entries","td","inputName","reset","cell","cellText","cellName","setInputValue","ev","inputValue","inputData","focus","code"],"mappings":"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","file":"main.62cb7fc1.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst head = document.querySelector('thead');\nconst tbody = document.querySelector('tbody');\nconst headTh = [...head.firstElementChild.children];\n\nlet firstClick = true;\nlet lastClickIndex = null;\n\nhead.addEventListener('click', (e) => {\n  const index = e.target.cellIndex;\n\n  firstClick = (lastClickIndex !== index) ? true : !firstClick;\n  lastClickIndex = index;\n\n  getSortedList(index, firstClick, (index === 4));\n});\n\nfunction getSortedList(i, asc, format) {\n  const sortedElements = [...tbody.children].sort((a, b) => {\n    let first = a.children[i].innerText;\n    let second = b.children[i].innerText;\n\n    if (format) {\n      first = formatData(first);\n      second = formatData(second);\n    }\n\n    if (!isNaN(first)) {\n      return (asc) ? first - second : second - first;\n    }\n\n    return (asc) ? first.localeCompare(second) : second.localeCompare(first);\n  });\n\n  tbody.append(...sortedElements);\n}\n\nfunction formatData(text) {\n  return text.replace(/\\D/g, '');\n}\n\ntbody.addEventListener('click', (e) => {\n  selectRow(e.target.parentElement);\n});\n\nfunction selectRow(tr) {\n  for (const el of tbody.children) {\n    el.classList.remove('active');\n  }\n  tr.classList.add('active');\n}\n\nconst form = document.createElement('form');\n\nform.classList.add('new-employee-form');\naddInputsAndButtonToForm();\ndocument.body.lastElementChild.before(form);\n\nfunction addInputsAndButtonToForm() {\n  headTh.forEach((el, i) => {\n    const label = document.createElement('label');\n    const text = el.innerText;\n    const elementType\n      = formatData(tbody.firstElementChild.children[i].innerText);\n    const type = (!isNaN(elementType) && elementType !== '')\n      ? 'number'\n      : 'text';\n\n    const input = `\n      <input \n      type=\"${type}\"\n      name=\"${text.toLowerCase()}\"\n      data-qa=\"${text.toLowerCase()}\"\n      required\n      >\n    `;\n    const select = `\n      <select\n      name=\"${text.toLowerCase()}\"\n      data-qa=\"${text.toLowerCase()}\"\n      >\n        <option>\n          Tokyo\n        </option>\n        <option>\n          Singapore\n        </option>\n        <option>\n          London\n        </option>\n        <option>\n          New York\n        </option>\n        <option>\n          Edinburgh\n        </option>\n        <option>\n          San Francisco\n        </option>\n      </select>\n    `;\n\n    if (text === 'Office') {\n      label.innerHTML = `\n        ${text}:\n        ${select}\n      `;\n    } else {\n      label.innerHTML = `\n        ${text}:\n        ${input}\n      `;\n    }\n\n    form.append(label);\n  });\n\n  const button = document.createElement('button');\n\n  button.type = 'submit';\n  button.innerText = 'Save to table';\n  form.append(button);\n}\n\nconst labels = [...document.querySelectorAll('label')];\n\nform.addEventListener('submit', (e) => {\n  e.preventDefault();\n\n  const data = new FormData(form);\n  const formData = Object.fromEntries(data.entries());\n  const tr = document.createElement('tr');\n\n  labels.forEach(el => {\n    const td = document.createElement('td');\n    const inputName = el.firstElementChild.name;\n    let value = el.firstElementChild.value;\n\n    if (inputName === 'salary') {\n      value = formatSalaryData(value);\n    }\n    td.innerText = value;\n    tr.append(td);\n  });\n\n  if (validationForForm(formData)) {\n    tbody.append(tr);\n    form.reset();\n  }\n});\n\nfunction formatSalaryData(data) {\n  let value = +data;\n\n  value = '$' + value.toLocaleString('en-US');\n\n  return value;\n}\n\nfunction validationForForm(data) {\n  if (data.hasOwnProperty('name')) {\n    if (data.name.length < 4 || /\\d/.test(data.name)) {\n      showNotification('Error',\n        `Enter a valid name. `\n        + `Name must not be less than 4 letters and not contain numbers!`,\n        'error'\n      );\n\n      return false;\n    }\n  }\n\n  if (data.hasOwnProperty('position')) {\n    if (data.position.length < 4 || /\\d/.test(data.position)) {\n      showNotification('Error',\n        `Enter a valid position. `\n        + `Position must not be less than 4 letters and not contain numbers!`,\n        'error'\n      );\n\n      return false;\n    }\n  }\n\n  if (data.hasOwnProperty('office')) {\n    const offices\n      = [\n        'Tokyo',\n        'Singapore',\n        'London',\n        'New York',\n        'Edinburgh',\n        'San Francisco',\n      ];\n\n    if (!offices.includes(data.office)) {\n      showNotification('Error',\n        'Enter a valid location. Office does not exist in this city!',\n        'error'\n      );\n\n      return false;\n    }\n  }\n\n  if (data.hasOwnProperty('age')) {\n    if (+data.age < 18 || +data.age > 90 || isNaN(+data.age)) {\n      showNotification('Error',\n        'Enter a valid Age. Age must be at least 18 and not more than 90!',\n        'error'\n      );\n\n      return false;\n    }\n  }\n\n  if (data.hasOwnProperty('salary')) {\n    if (isNaN(+data.salary) || data.salary === '') {\n      showNotification('Error',\n        'Enter a valid salary. Salary must contain only numbers!',\n        'error'\n      );\n\n      return false;\n    }\n  }\n\n  showNotification('Success',\n    'Data added successfully!',\n    'success'\n  );\n\n  return true;\n}\n\nfunction showNotification(title, description, type) {\n  const element = document.createElement('div');\n\n  element.dataset.qa = 'notification';\n  element.classList.add('notification', type);\n\n  element.innerHTML = `\n    <h2 class=\"title\">${title}</h2>\n    <p>${description}</p>`;\n\n  document.body.append(element);\n\n  setTimeout(() => element.remove(), 3000);\n}\n\ntbody.addEventListener('dblclick', (e) => {\n  const cell = e.target;\n  const cellIndex = e.target.cellIndex;\n  const cellText = cell.innerText;\n  const cellName = headTh[cellIndex].innerText;\n\n  const input = inputForTable();\n\n  const setInputValue = (ev) => {\n    let inputValue = ev.target.value;\n    const inputData = {};\n\n    inputData[cellName.toLowerCase()] = inputValue;\n\n    if (cellName === 'Salary') {\n      inputValue = formatSalaryData(inputValue);\n    }\n\n    if (validationForForm(inputData)) {\n      cell.innerText = inputValue;\n    } else {\n      cell.innerText = cellText;\n    }\n  };\n\n  cell.innerText = '';\n  cell.append(input);\n  input.focus();\n\n  input.addEventListener('blur', (ev) => {\n    setInputValue(ev);\n  });\n\n  input.addEventListener('keydown', (ev) => {\n    if (ev.code !== 'Enter') {\n      return;\n    }\n\n    setInputValue(ev);\n  });\n});\n\nfunction inputForTable() {\n  const input = document.createElement('input');\n\n  input.classList.add('cell-input');\n\n  return input;\n}\n"]}